# Load the simulated data
# set.seed(999)
for (i in 1:100){
print(i)
data <- sim_data(r = 0.85)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_ols <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_ols)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
# set.seed(999)
for (i in 1:100){
print(i)
data <- sim_data(r = 0.85)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
# set.seed(999)
df_out <- c()
for (i in 1:100){
print(i)
data <- sim_data(r = 0.85)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
# set.seed(999)
df_out <- c()
for (i in 1:500){
print(i)
data <- sim_data(r = 0.9)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
# set.seed(999)
df_out <- c()
for (i in 1:200){
print(i)
data <- sim_data(r = 0.7)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:200){
print(i)
data <- sim_data(r = 0.7)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:200){
print(i)
data <- sim_data(r = 0.7)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:500){
print(i)
data <- sim_data(r = 0.9)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:500){
print(i)
data <- sim_data(r = 0.9)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
# print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
# print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:500){
print(i)
data <- sim_data(r = 0.9)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
# print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
# print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
0.07432166/0.07356001
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:500){
print(i)
data <- sim_data(r = 0.5)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
# print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
# print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
for (i in 1:100){
print(i)
data <- sim_data(r = 0.5)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
# print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 1)
# print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
df_tmp <- data.frame(est_popinf_old = fit_old[2, 1],
est_popinf_new = fit_new[2, 1],
est_ppi_plus = fit_ppi$est[2],
se_popinf_old = fit_old[2, 2],
se_popinf_new = fit_new[2, 2],
se_ppi_plus = fit_ppi$se[2]
)
df_out <- rbind(df_out, df_tmp)
}
colMeans(df_out)
apply(df_out, 2, sd)
IPD::ppi_plusplus_logistic(X_l, Y_l, f_l, X_u, f_u)
print(i)
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/main.R")
source("/Users/jiacheng/Library/CloudStorage/OneDrive-UW-Madison/Academic/Research/Github/POPInf/R/utils.R")
# Load the simulated data
set.seed(42)
df_out <- c()
print(i)
data <- sim_data(r = 0.9, binary = T)
X_lab = data$X_lab ## Covariates in the labeled data
X_unlab = data$X_unlab ## Covariates in the unlabeled data
Y_lab = data$Y_lab ## Observed outcome in the labeled data
Yhat_lab = data$Yhat_lab ## Predicted outcome in the labeled data
Yhat_unlab = data$Yhat_unlab ## Predicted outcome in the unlabeled data
fit_old <- POPInf::pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols")
# print(fit_old)
fit_new <- pop_M(X_lab = X_lab, X_unlab = X_unlab,
Y_lab = Y_lab, Yhat_lab = Yhat_lab, Yhat_unlab = Yhat_unlab,
alpha = 0.05, method = "ols", focal_index = 2)
# print(fit_new)
# Try PPI++
X_l <- as.matrix(data.frame(rep(1, nrow(X_lab)), X_lab))
# X_l <- as.matrix(data.frame(X_lab))
f_l <- as.matrix(Yhat_lab)
Y_l <- as.matrix(Y_lab)
# X_u <- as.matrix(X_unlab)
X_u <- as.matrix(data.frame(rep(1, nrow(X_unlab)), X_unlab))
f_u<- as.matrix(Yhat_unlab)
fit_ppi <- IPD::ppi_plusplus_ols(X_l, Y_l, f_l, X_u, f_u)
fit_ppi <- IPD::ppi_plusplus_logistic(X_l, Y_l, f_l, X_u, f_u)
print(i)
